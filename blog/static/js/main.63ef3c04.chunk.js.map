{"version":3,"sources":["reducers/postsReducer.js","reducers/index.js","components/Firebase/Firebase.js","actions/postsAction.js","components/Header/Header.js","components/Footer/Footer.js","pages/Home/Home.js","pages/About/About.js","pages/Login/Login.js","components/PostForm/PostForm.js","pages/AddPost/AddPost.js","pages/EditPost/EditPost.js","components/App.js","serviceWorker.js","index.js"],"names":["posts","state","arguments","length","undefined","action","type","list","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","ref","getPosts","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","on","snapshot","console","log","val","stop","_x","apply","this","Header","react_default","createElement","Menu","fixed","Container","Item","as","Link","to","header","Component","Footer","Segment","className","vertical","textAlign","Home","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","callAction","bind","assertThisInitialized","onInputChange","postsAction","e","setState","defineProperty","target","name","value","text","elements_Header_Header","onClick","_","map","post","key","react_router_dom","title","body","connect","bindActionCreators","About","Login","Grid","style","height","verticalAlign","Column","maxWidth","color","Icon","Form","size","stacked","Input","fluid","icon","iconPosition","placeholder","Button","PostForm","onSubmit","onHandleSubmit","fields","onChange","TextArea","AddPost","objectSpread","str","replace","toLowerCase","from","i","l","RegExp","charAt","preventDefault","_this$state$fields","child","slug","set","PostForm_PostForm","EditPost","match","params","App","basename","Header_Header","react_router","exact","path","component","Footer_Footer","Boolean","location","hostname","ReactDOM","render","es","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.63ef3c04.chunk.js","sourcesContent":["function posts(state = [], action) {\n  switch (action.type) {\n    case 'GET_POSTS':\n      return { list: action.posts };\n    default:\n      return state;\n  }\n}\nexport default posts;\n","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport posts from './postsReducer';\n\nconst rootReducer = combineReducers({ posts });\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, /* preloadedState, */ composeEnhancers(\n  applyMiddleware(thunk)\n)\n);\n\n\n\nexport default store;\n","import * as firebase from \"firebase\";\n\nconst config = {\n    apiKey: \"AIzaSyCYuP0g2TCzDflhQCvx6VOMWvKC9yXka9s\",\n    authDomain: \"ekg-blog.firebaseapp.com\",\n    databaseURL: \"https://ekg-blog.firebaseio.com\",\n    projectId: \"ekg-blog\",\n    storageBucket: \"ekg-blog.appspot.com\",\n    messagingSenderId: \"691489541715\"\n};\nfirebase.initializeApp(config);\n\nexport const database = firebase.database().ref('/posts');\n","import { database } from \"../components/Firebase/Firebase\";\n\nexport function getPosts() {\n  return async (dispatch) => {\n    database.on('value', snapshot => {\n      console.log('database.on.value', snapshot.val());\n      dispatch({\n        type: 'GET_POSTS',\n        posts: snapshot.val()\n      });\n    });\n\n  }\n}\n\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport {\n  Container,\n  // Dropdown,\n  Menu\n} from 'semantic-ui-react'\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <Menu fixed='top'>\n                <Container>\n                    <Menu.Item as={Link} to='/' header>EKG</Menu.Item>\n                    <Menu.Item as={Link} to='/about'>About</Menu.Item>\n                    <Menu.Item as={Link} to='/login'>Login</Menu.Item>\n                    <Menu.Item as={Link} to='/addpost'>AddPost</Menu.Item>\n                    {/* <Dropdown item simple text='Dropdown'>\n                        <Dropdown.Menu>\n                            <Dropdown.Item>List Item</Dropdown.Item>\n                            <Dropdown.Item>List Item</Dropdown.Item>\n                            <Dropdown.Divider />\n                            <Dropdown.Header>Header Item</Dropdown.Header>\n                            <Dropdown.Item>\n                                <i className='dropdown icon' />\n                                <span className='text'>Submenu</span>\n                                <Dropdown.Menu>\n                                    <Dropdown.Item>List Item</Dropdown.Item>\n                                    <Dropdown.Item>List Item</Dropdown.Item>\n                                </Dropdown.Menu>\n                            </Dropdown.Item>\n                            <Dropdown.Item>List Item</Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown> */}\n                </Container>\n            </Menu>\n\n        )\n    }\n}","import React, { Component } from 'react';\nimport {\n  Container,\n  Segment,\n} from 'semantic-ui-react'\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <Segment className=\"page-footer\" vertical>\n        <Container textAlign='center'>\n          EKG\n        </Container>\n      </Segment>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport _ from 'lodash';\n\nimport * as postsAction from \"../../actions/postsAction\";\nimport {\n  Container,\n  Header\n} from 'semantic-ui-react'\n\n\nclass Home extends Component {\n  state = {\n    posts: []\n  };\n  constructor(props) {\n    super(props);\n    this.callAction = this.callAction.bind(this);\n    this.onInputChange = this.onInputChange.bind(this);\n  }\n  componentWillMount() {\n  }\n  callAction() {\n    this.props.postsAction.getPosts();\n  }\n  onInputChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n  render() {\n    console.log(\"this.props.state\", this.props);\n    return (\n      <div>\n        <Container text>\n          <Header as='h1'>Home Title</Header>\n          <p onClick={this.callAction}>Home Text</p>\n          {\n            _.map(this.props.state.posts.list, (post, key) => {\n              return (\n                <div key={key}>\n                  <h2>\n                    <Link to={\"post/\" + key}>{post.title}</Link>\n                  </h2>\n                  <p>{post.body}</p>\n                  <span><Link to={\"editPost/\" + key}>Edit Post</Link></span>\n                </div>\n              )\n            })\n          }\n        </Container>\n      </div>\n    )\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return { state: state };\n};\nlet mapDispatchToProps = (dispatch) => {\n  return { postsAction: bindActionCreators(postsAction, dispatch) }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React, { Component } from 'react';\nimport {\n  Container,\n  Header\n} from 'semantic-ui-react'\n\n\nexport default class About extends Component {\n  render() {\n    return (\n      <div>\n        <Container text>\n          <Header as='h1'>About Title</Header>\n          <p>About Text</p>\n        </Container>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport {\n  Container,\n  Header,\n  Grid,\n  Segment,\n  Form,\n  Button,\n  Icon\n} from 'semantic-ui-react';\n\nimport './Login.scss';\n\nexport default class Login extends Component {\n  render() {\n    return (\n      <div>\n        <Container text>\n          <div className='login-form'>\n            <Grid textAlign='center' style={{ height: '100%' }} verticalAlign='middle'>\n              <Grid.Column style={{ maxWidth: 450 }}>\n                <Header as='h2' color='teal' textAlign='center'><Icon name='user' /> Log-in to your account</Header>\n                <Form size='large'>\n                  <Segment stacked>\n                    <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' />\n                    <Form.Input\n                      fluid\n                      icon='lock'\n                      iconPosition='left'\n                      placeholder='Password'\n                      type='password'\n                    />\n\n                    <Button color='teal' fluid size='large'>Login</Button>\n                  </Segment>\n                </Form>\n              </Grid.Column>\n            </Grid>\n          </div>\n        </Container>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport {\n  Container,\n  Header,\n  Grid,\n  Segment,\n  Form,\n  Button,\n  Icon\n} from 'semantic-ui-react';\n\nexport default class PostForm extends Component {\n  componentDidMount() {\n\n  }\n  render() {\n    return (\n      <Container text>\n        <div className='add-post-form'>\n          <Grid textAlign='center' style={{ height: '100%' }} verticalAlign='middle'>\n            <Grid.Column style={{ maxWidth: 450 }}>\n              <Header as='h2' color='teal' textAlign='center'><Icon name='question' /> Add Post</Header>\n              <Form size='large' onSubmit={this.props.onHandleSubmit}>\n                <Segment stacked>\n                  <Form.Input\n                    fluid\n                    value={this.props.fields.title}\n                    name=\"title\"\n                    placeholder='Title'\n                    onChange={this.props.onInputChange}\n                  />\n                  <Form.TextArea\n                    value={this.props.fields.body}\n                    name=\"body\"\n                    placeholder='Body'\n                    onChange={this.props.onInputChange}\n                  />\n                  <Button color='teal' fluid size='large'>AddPost</Button>\n                </Segment>\n              </Form>\n            </Grid.Column>\n          </Grid>\n        </div>\n      </Container>\n\n    )\n  }\n}\n","import React, { Component } from 'react';\n\nimport PostForm from \"../../components/PostForm/PostForm\";\n\nimport './AddPost.scss';\nimport { database } from '../../components/Firebase/Firebase';\n\n\nexport default class AddPost extends Component {\n  state = {\n    fields: {\n      title: '',\n      body: ''\n    },\n    posts: []\n  }\n  constructor(props) {\n    super(props);\n    this.onInputChange = this.onInputChange.bind(this);\n    this.onHandleSubmit = this.onHandleSubmit.bind(this);\n  }\n\n  onInputChange(e) {\n    let fields = {\n      ...this.state.fields,\n      [e.target.name]: e.target.value\n    }\n    this.setState({\n      fields\n    })\n  }\n\n  slug(str) {\n    str = str.replace(/^\\s+|\\s+$/g, ''); // trim\n    str = str.toLowerCase();\n\n    // remove accents, swap ñ for n, etc\n    var from = \"ãàáäâẽèéëêìíïîõòóöôùúüûñç·/_,:;\";\n    var to = \"aaaaaeeeeeiiiiooooouuuunc------\";\n    for (var i = 0, l = from.length; i < l; i++) {\n      str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\n    }\n\n    str = str.replace(/[^a-z0-9 -]/g, '') // remove invalid chars\n      .replace(/\\s+/g, '-') // collapse whitespace and replace by -\n      .replace(/-+/g, '-'); // collapse dashes\n\n    return str;\n  };\n\n  onHandleSubmit(e) {\n    e.preventDefault();\n    const { title, body } = this.state.fields;\n    const post = {\n      title,\n      body\n    };\n\n    database.child('/' + this.slug(title)).set(post);\n    this.setState({\n      fields: {\n        title: '',\n        body: ''\n      }\n    })\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount');\n  }\n\n  render() {\n    return (\n      <div>\n        <PostForm\n          fields={this.state.fields}\n          onHandleSubmit={this.onHandleSubmit.bind(this)}\n          onInputChange={this.onInputChange.bind(this)}\n        />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport PostForm from \"../../components/PostForm/PostForm\";\n\nimport './EditPost.scss';\nimport { database } from '../../components/Firebase/Firebase';\n\n\nclass EditPost extends Component {\n  state = {\n    fields: {\n      title: '',\n      body: ''\n    },\n    slug: this.props.match.params.slug\n  }\n\n  constructor(props) {\n    super(props);\n    this.onInputChange = this.onInputChange.bind(this);\n    this.onHandleSubmit = this.onHandleSubmit.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({\n      fields: this.props.state.posts.list[this.state.slug]\n    });\n  }\n\n  onInputChange(e) {\n    let fields = {\n      ...this.state.fields,\n      [e.target.name]: e.target.value\n    }\n    this.setState({\n      fields\n    })\n  }\n\n  slug(str) {\n    str = str.replace(/^\\s+|\\s+$/g, ''); // trim\n    str = str.toLowerCase();\n\n    // remove accents, swap ñ for n, etc\n    var from = \"ãàáäâẽèéëêìíïîõòóöôùúüûñç·/_,:;\";\n    var to = \"aaaaaeeeeeiiiiooooouuuunc------\";\n    for (var i = 0, l = from.length; i < l; i++) {\n      str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\n    }\n\n    str = str.replace(/[^a-z0-9 -]/g, '') // remove invalid chars\n      .replace(/\\s+/g, '-') // collapse whitespace and replace by -\n      .replace(/-+/g, '-'); // collapse dashes\n\n    return str;\n  };\n\n  onHandleSubmit(e) {\n    e.preventDefault();\n    const { title, body } = this.state.fields;\n    const post = {\n      title,\n      body\n    };\n\n    database.child('/' + this.slug(title)).set(post);\n    this.setState({\n      fields: {\n        title: '',\n        body: ''\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <PostForm\n          fields={this.state.fields}\n          onHandleSubmit={this.onHandleSubmit.bind(this)}\n          onInputChange={this.onInputChange.bind(this)}\n        />\n      </div>\n    )\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return { state };\n};\nlet mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPost);\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as postsAction from \"../actions/postsAction\";\n\n\nimport Header from './Header/Header';\nimport Footer from './Footer/Footer';\nimport Home from '../pages/Home/Home';\nimport About from '../pages/About/About';\nimport Login from '../pages/Login/Login';\nimport AddPost from '../pages/AddPost/AddPost';\nimport EditPost from '../pages/EditPost/EditPost';\n\nimport { Segment } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css'\nimport './App.scss';\n\nclass App extends Component {\n  componentWillMount() {\n    this.props.postsAction.getPosts();\n  }\n  render() {\n    return (\n      <div className=\"main-container\">\n\n        {\n          this.props.state.posts.list ?\n            <Router basename=\"/blog\">\n              <Header />\n              <Segment className=\"page-container\" vertical>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/addpost\" component={AddPost} />\n                <Route exact path=\"/editpost/:slug\" component={EditPost} />\n              </Segment>\n              <Footer />\n            </Router> :\n            ''\n        }\n\n\n      </div>\n    );\n  }\n}\n\n\nlet mapStateToProps = (state) => {\n  return { state: state };\n};\nlet mapDispatchToProps = (dispatch) => {\n  return { postsAction: bindActionCreators(postsAction, dispatch) }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport store from \"./reducers\";\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}